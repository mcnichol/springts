/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2015-07-01 06:17:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jspf/common/scripts.jspf", Long.valueOf(1435725560000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>Towtruck Tracker</title>\n");
      out.write("<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.flatly.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/styles.css\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body ng-controller=\"TowTruckCtrl\">\n");
      out.write("\t<nav class=\"navbar navbar-default navbar-fixed-top\">\n");
      out.write("\t  <div class=\"container\">\n");
      out.write("\t\t  <!-- Brand and toggle get grouped for better mobile display -->\n");
      out.write("\t\t  <div class=\"navbar-header\">\n");
      out.write("\t\t    <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#towtruck-navbar-collapse\">\n");
      out.write("\t\t      <span class=\"sr-only\">Toggle Navigation</span>\n");
      out.write("\t\t      <span class=\"icon-bar\"></span>\n");
      out.write("\t\t      <span class=\"icon-bar\"></span>\n");
      out.write("\t\t      <span class=\"icon-bar\"></span>\n");
      out.write("\t\t    </button>\n");
      out.write("\t\t    <a class=\"navbar-brand\" href=\"#\">ARS Towtruck Tracker</a>\n");
      out.write("\t\t  </div>\n");
      out.write("\t\t\n");
      out.write("\t\t  <!-- Collect the nav links, forms, and other content for toggling -->\n");
      out.write("\t\t  <div class=\"collapse navbar-collapse\" id=\"towtruck-navbar-collapse\">\n");
      out.write("\t\t    <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t      <li class=\"dropdown\">\n");
      out.write("\t\t        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" >Advanced <span class=\"caret\"></span></a>\n");
      out.write("\t\t        <ul class=\"dropdown-menu\">\n");
      out.write("\t\t          <li><a href=\"#\">Show HUD</a></li>\n");
      out.write("\t\t          <li role=\"separator\" class=\"divider\"></li>\n");
      out.write("\t\t          <li><a href=\"#\">Start Tracking</a></li>\n");
      out.write("\t\t          <li><a href=\"#\">Stop Tracking</a></li>\n");
      out.write("\t\t          <li role=\"separator\" class=\"divider\"></li>\n");
      out.write("\t\t          <li><a href=\"#\" onclick=\"mapResetPosition()\">Reset Position</a></li>\n");
      out.write("\t\t        </ul>\n");
      out.write("\t\t      </li>\n");
      out.write("\t\t    </ul>\n");
      out.write("\t\t  </div><!-- /.navbar-collapse -->\n");
      out.write("\t\t</div><!-- /.container -->\n");
      out.write("\t</nav>\n");
      out.write("\t<div id=\"map-canvas\" class=\"offset\"></div>\n");
      out.write("\t\n");
      out.write("\t<div>\n");
      out.write("\t\t<a href=\"event.html\">\n");
      out.write("\t\t\tAdd Event >> \n");
      out.write("\t\t</a>\n");
      out.write("\t</div>\n");
      out.write("\t<div>\n");
      out.write("\t\t<a href=\"attendee.html\">\n");
      out.write("\t\t\tAdd Attendee >> \n");
      out.write("\t\t</a>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("<script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-2.1.4.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/bootstrap.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/Map.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/Towtruck.js\"></script>");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
